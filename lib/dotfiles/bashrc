# Frankenstein dotfiles
# sources: Matt Polito, Ryan Tomayko

export EDITOR="vim"
export HISTCONTROL=erasedups
export HISTSIZE=10000
export CLICOLOR=1
export LSCOLORS=gxfxcxdxbxegedabagacad
# export BUNDLE_GEMFILE=Gemfile.local
export PATH=$HOME/.rbenv/shims:~/bin:/usr/local/bin:$PATH:/usr/local/sbin:$HOME/.rbenv/bin
export NODE_PATH=/usr/local/lib/node_modules:$NODE_PATH
export JAVA_HOME="$(/usr/libexec/java_home)"
export LANG=en_US.UTF-8

# Some ruby optimizations
export RUBY_GC_HEAP_INIT_SLOTS=600000
export RUBY_GC_MALLOC_LIMIT=59000000
export RUBY_HEAP_FREE_MIN=100000

# TMUX ENV variables
export TMUX_SESSION=$USER
export TMUX_SOCKET_PATH="/tmp/ajw-tmux"

# Shell Opts
shopt -s cdspell >/dev/null 2>&1
shopt -s extglob >/dev/null 2>&1
shopt -s histappend >/dev/null 2>&1
shopt -s hostcomplete >/dev/null 2>&1
shopt -s interactive_comments >/dev/null 2>&1
shopt -u mailwarn >/dev/null 2>&1
shopt -s no_empty_cmd_completion >/dev/null 2>&1
# shopt -s autocd

# Some Python stuffs
# pip should only run if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true

# cache pip-installed packages to avoid re-downloading
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache

# function to enable global pip install
syspip(){
   PIP_REQUIRE_VIRTUALENV="" pip "$@"
}

# Aliases
if [ -e "$HOME/.aliases" ]; then
  source "$HOME/.aliases"
fi

# Completion
# ----------------------------------------------------------------------
# BASH COMPLETION
# ----------------------------------------------------------------------

# [[ -d /usr/local/etc/bash_completion.d ]] && . /usr/local/etc/bash_completion.d/*
if [ -f `brew --prefix`/etc/bash_completion ]; then
  . `brew --prefix`/etc/bash_completion
fi

#test -z "$BASH_COMPLETION" && {
    #bash=${BASH_VERSION%.*}; bmajor=${bash%.*}; bminor=${bash#*.}
    #test -n "$PS1" && test $bmajor -gt 1 && {
        ## search for a bash_completion file to source
        #for f in /usr/local/etc/bash_completion.d \
                 #/usr/pkg/etc/bash_completion \
                 #/opt/local/etc/bash_completion \
                 #/etc/bash_completion
        #do
            #test -f $f && {
                #. $f
                #break
            #}
        #done
    #}
    #unset bash bmajor bminor
#}

# GIT
function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch {
  local ref=$(git symbolic-ref HEAD 2> /dev/null)
  if [[ -n $ref ]]; then
    echo `expr "$ref" : 'refs/heads/\(.*\)'`
  fi
}

# Utility
function tmux-kill-windows {
  for((i=$1; i<=$2; i++))
  do
    tmux kill-window -t$i
  done
}

# TMUX
if [[ -z $TMUX ]]; then
  # ** TMUX ATULOGIN **
  # Check for existing session and attach if present
  tmux -S $TMUX_SOCKET_PATH has-session -t $TMUX_SESSION &>/dev/null
  if [[ $? -ne 0 ]]; then
    tmux -S $TMUX_SOCKET_PATH new-session -d -s $TMUX_SESSION
  fi
  tmux -S $TMUX_SOCKET_PATH attach-session -t $TMUX_SESSION &>/dev/null
fi

# Prompt
#export PS1='$(rvm-prompt)$(__git_ps1 "[\[\e[0;32m\]%s\[\e[0m\]\[\e[0;33m\]$(parse_git_dirty)\[\e[0m\]]")[\w]: '
export PS1='$(parse_git_branch)> '

# Old ZSH
# export PS1='$(git_prompt_info)[${SSH_CONNECTION+"%{$fg[green]%}%n@%m:"}%{$fg[green]%}%2c%{$reset_color%}] '

# Local Overrides
if [ -e "$HOME/.bashrc.local" ]; then
  source "$HOME/.bashrc.local"
fi

eval "$(rbenv init -)"

source /usr/local/Library/LinkedKegs/rbenv/completions/rbenv.bash

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
